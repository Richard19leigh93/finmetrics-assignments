# load dataset for assignment
Daily_TRI <- read_rds("data/Fin_Data_SA_US_NKY.rds")
# drop NAs from data
Daily_TRI_NA_omit <-
Daily_TRI %>%
na.omit()
library(rmsfuns)
load_pkgs <- c("xts", "tidyverse", "tbl2xts", "PerformanceAnalytics", "lubridate", "glue",
"knitr", "kableExtra")
load_pkg(load_pkgs)
Daily_TRI <- read_rds("data/Fin_Data_SA_US_NKY.rds")
# drop NAs from data
Daily_TRI_NA_omit <-
Daily_TRI %>%
na.omit()
Cap_Weighted_monthly_index_returns <-
Daily_TRI_NA_omit %>%
arrange(date) %>%
mutate(YearMonths = format(date,"%Y_%B")) %>%
group_by(YearMonths, Short.Name) %>%
filter(date == last(date)) %>%
ungroup() %>%
group_by(Ticker) %>%
mutate(Returns = TRI/lag(TRI)-1) %>%
mutate(Returns = coalesce(Returns, 0)) %>%
ungroup() %>%
group_by(Universe, BICS_LEVEL_1_SECTOR_NAME, date) %>%
mutate(MarketCap_Sector = sum(Market.Cap)) %>%
mutate(Weight = Market.Cap/MarketCap_Sector) %>%
mutate(PortfolioReturn = sum(Returns*Weight)) %>%
summarise(WeightedReturn = mean(PortfolioReturn)) %>%
ungroup()
#graph cap-weighted returns by sector and by country
Cap_Weighted_monthly_index_returns %>%
arrange(date) %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=BICS_LEVEL_1_SECTOR_NAME))+
facet_wrap(~Universe) +
theme(axis.text.x = element_text(angle=90))
ggsave("bin/Cap_Weighted_monthly_index_returns.png")
Cap_Weighted_monthly_index_returns %>%
arrange(date) %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=BICS_LEVEL_1_SECTOR_NAME))+
facet_wrap(~Universe) +
theme(axis.text.x = element_text(angle=90))
ggsave("bin/Cap_Weighted_monthly_index_returns.png", dpi = 500)
#graph cap-weighted returns by sector and by country
Cap_Weighted_monthly_index_returns %>%
arrange(date) %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=BICS_LEVEL_1_SECTOR_NAME))+
facet_wrap(~Universe) +
theme(axis.text.x = element_text(angle=90))
ggsave("bin/Cap_Weighted_monthly_index_returns.png", dpi = 500)
dev.off()
dev.off()
Cap_Weighted_monthly_index_returns %>%
arrange(date) %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=BICS_LEVEL_1_SECTOR_NAME))+
facet_wrap(~Universe) +
theme(axis.text.x = element_text(angle=90))
ggsave("bin/Cap_Weighted_monthly_index_returns.png", dpi = 1000)
dev.off()
Cap_Weighted_monthly_index_returns %>%
arrange(date) %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=BICS_LEVEL_1_SECTOR_NAME))+
facet_wrap(~Universe) +
theme(axis.text.x = element_text(angle=90))
ggsave("bin/Cap_Weighted_monthly_index_returns.png", width = 20, dpi = 1000)
dev.off()
Cap_Weighted_monthly_index_returns %>%
arrange(date) %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=BICS_LEVEL_1_SECTOR_NAME))+
facet_wrap(~Universe) +
theme(axis.text.x = element_text(angle=90))
ggsave("bin/Cap_Weighted_monthly_index_returns.png", scale = 1, width = NA,
height = NA, dpi = 1000)
dev.off()
Cap_Weighted_monthly_index_returns %>%
arrange(date) %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=BICS_LEVEL_1_SECTOR_NAME))+
facet_wrap(~Universe) +
theme(axis.text.x = element_text(angle=90))
ggsave("bin/Cap_Weighted_monthly_index_returns.png", scale = 1, width = NA,
height = NA)
dev.off()
#graph cap-weighted returns by sector and by country
Cap_Weighted_monthly_index_returns %>%
arrange(date) %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=BICS_LEVEL_1_SECTOR_NAME))+
facet_wrap(~Universe) +
theme(axis.text.x = element_text(angle=90))
ggsave("bin/Cap_Weighted_monthly_index_returns.png", scale = 1, width = 100,
height = 20)
dev.off()
#graph cap-weighted returns by sector and by country
Cap_Weighted_monthly_index_returns %>%
arrange(date) %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=BICS_LEVEL_1_SECTOR_NAME))+
facet_wrap(~Universe) +
theme(axis.text.x = element_text(angle=90))
ggsave("bin/Cap_Weighted_monthly_index_returns.png", width = 100,
height = 20)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
Cap_Weighted_monthly_index_returns %>%
arrange(date) %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=BICS_LEVEL_1_SECTOR_NAME))+
facet_wrap(~Universe) +
theme(axis.text.x = element_text(angle=90))
ggsave("bin/Cap_Weighted_monthly_index_returns.png")
dev.off()
View(Cap_Weighted_monthly_index_returns)
Cap_Weighted_monthly_index_returns %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Communications") %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=Universe))
ggsave("bin/Cap_Weighted_monthly_communications_sector.png")
dev.off()
Cap_Weighted_monthly_index_returns %>%
filter(BICS_LEVEL_1_SECTOR_NAME == "Communications") %>%
ggplot() +
geom_line(aes(date, WeightedReturn, color=Universe))
ggsave("bin/Cap_Weighted_monthly_communications_sector.png")
dev.off()
financial_index_performance <-
Cap_Weighted_monthly_index_returns %>%
filter(BICS_LEVEL_1_SECTOR_NAME %in% "Financials") %>%
group_by(Universe) %>%
mutate(CumReturns = cumprod(1+WeightedReturn))
ggplot(financial_index_performance) +
geom_line(aes(date, CumReturns, color=Universe))
ggsave("bin/Cap_Weighted_monthly_index_returns_financials.png")
dev.off()
Cap_Weighted_monthly_JALSHAll <-
Daily_TRI_NA_omit %>%
arrange(date) %>%
mutate(YearMonths = format(date,"%Y_%B")) %>%
group_by(YearMonths, Short.Name) %>%
filter(date == last(date)) %>%
ungroup() %>%
group_by(Ticker) %>%
mutate(Returns = TRI/lag(TRI)-1) %>%
mutate(Returns = coalesce(Returns, 0)) %>%
ungroup() %>%
filter(Universe %in% "JALSHAll") %>%
group_by(date) %>%
mutate(MarketCap = sum(Market.Cap)) %>%
mutate(Weight = Market.Cap/MarketCap) %>%
arrange(Weight) %>%
mutate(CumWeight = cumsum(Weight)) %>%
filter(CumWeight >= 0.05) %>%
mutate(PortfolioReturn = sum(Returns*Weight)) %>%
summarise(WeightedReturn = mean(PortfolioReturn)) %>%
ungroup()
ggplot(Cap_Weighted_monthly_JALSHAll) +
geom_line(aes(date, WeightedReturn))
ggsave("bin/Cap_Weighted_monthly_JALSHAll.png")
dev.off()
Cap_Weighted_daily_material_sector_returns <-
Daily_TRI_NA_omit %>%
arrange(date) %>%
filter(BICS_LEVEL_1_SECTOR_NAME %in% "Materials") %>%
group_by(Ticker) %>%
mutate(Returns = TRI/lag(TRI)-1) %>%
mutate(Returns = coalesce(Returns, 0)) %>%
ungroup() %>%
group_by(Universe, date) %>%
mutate(MarketCap_Sector = sum(Market.Cap)) %>%
mutate(Weight = Market.Cap/MarketCap_Sector) %>%
mutate(PortfolioReturn = sum(Returns*Weight)) %>%
summarise(WeightedReturn = mean(PortfolioReturn)) %>%
ungroup() %>%
tbl_xts(., cols_to_xts = "WeightedReturn", spread_by = "Universe")
chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft")
ggsave("bin/Rolling_60_Day_Standard_Deviation.png")
dev.off()
chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft") +
ggsave("bin/Rolling_60_Day_Standard_Deviation.png")
dev.off()
chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft") %>%
ggsave("bin/Rolling_60_Day_Standard_Deviation.png")
dev.off()
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft"),"bin/Rolling_60_Day_Standard_Deviation.png")
ggsave(chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft"),"bin/Rolling_60_Day_Standard_Deviation.png")
dev.off()
ggsave(chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft"),"bin/Rolling_60_Day_Standard_Deviation.png")
dev.off()
chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft") +
ggsave("bin/Rolling_60_Day_Standard_Deviation.png")
dev.off()
chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft")
chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft", ,las=2)
chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft", las=2)
chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft", las=2)
chart.RollingPerformance(R = Cap_Weighted_daily_material_sector_returns, FUN = "sd",
width = 60, main = "Rolling 60 Day Standard Deviation",
legend.loc = "bottomleft")
